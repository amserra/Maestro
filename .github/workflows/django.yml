name: Django CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest
        services:
          # Label used to access the service container
          postgres:
            # Docker Hub image
            image: postgres
            # Provide the password for postgres
            env:
              POSTGRES_DB: maestro_db
              POSTGRES_USER: postgres
              POSTGRES_PASSWORD: postgres
            ports:
              - 5432:5432
            # Set health checks to wait until postgres has started
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
          rabbitmq:
            image: rabbitmq
            env:
              RABBITMQ_DEFAULT_USER: guest
              RABBITMQ_DEFAULT_PASS: guest
            ports:
              - 5672:5672

        steps:
            # Downloads a copy of the code in your repository before running CI tests
            - name: Check out repository code
              uses: actions/checkout@v2
            - name: Cache dependency
              uses: actions/cache@v2
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: |
                    ${{ runner.os }}-pip-
            # Sets up python
            - name: Set up Python Environment
              uses: actions/setup-python@v2
              with:
                  python-version: '3.x'
            - name: Cache multiple paths
              uses: actions/cache@v2
              with:
                path: |
                  ~/cache
                  !~/cache/exclude
                key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
            - name: Install requirements
              run: pip install -r requirements/test.txt
            - name: Run Migrations
              env:
                  DATABASE_NAME: maestro_db
                  DATABASE_USER: postgres
                  DATABASE_PASSWORD: postgres
                  DATABASE_HOST: localhost
                  DATABASE_PORT: 5432
              run: |
                  python manage.py makemigrations account
                  python manage.py migrate
            - name: Run celery worker for tests
              run: celery -A maestro worker -l info --detach
            - name: Run Tests
              env:
                  DATABASE_NAME: maestro_db
                  DATABASE_USER: postgres
                  DATABASE_PASSWORD: postgres
                  DATABASE_HOST: localhost
                  DATABASE_PORT: 5432
                  SECRET_KEY: 1234 # not relevant for testing
                  TEST: True
              run: python manage.py test
